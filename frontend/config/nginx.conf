user www-data;
worker_processes 2;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
 
events {
    worker_connections 1024;
    use epoll;
}
 
http {
    charset utf-8;
 
    # Enumerate all the Tornado servers here
    upstream tornado {
        server 127.0.0.1:8000;
    }
 
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;


    # added nginx-upload-progress module via nginx-extras
    # upload_progress proxied 1m;

    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;
 
    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    #proxy_next_upstream error;
 
    server {
        listen 80;
         client_max_body_size 100M;


        # Upload form should be submitted to this location
#        location /nginx {
#            # Pass altered request body to this location
#            upload_pass   @test;
#
#            # Store files to this directory
#            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
#            upload_store /tmp 1;
#
#            # Allow uploaded files to be read only by user
#            upload_store_access user:r;
#
#            # Set specified fields in request body
#            upload_set_form_field $upload_field_name.name "$upload_file_name";
#            upload_set_form_field $upload_field_name.content_type "$upload_content_type";
#            upload_set_form_field $upload_field_name.path "$upload_tmp_path";
#
#            # Inform backend about hash and size of a file
#            upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
#            upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
#            upload_pass_form_field "^submit$|^description$";
#
#            track_uploads proxied 30s;
#            upload_limit_rate 20000;
#
#            upload_cleanup 400 404 499 500-505;
#        }
#
#        # Pass altered request body to a backend
#        location @test {
#            proxy_pass   http://localhost:8000;
#        }
#
#        location ^~ /progress {
#            # report uploads tracked in the 'proxied' zone
#            report_uploads proxied;
#        } #Put this as a new location block

        location ^~ /static/ {
            root /vagrant/app/;
            if ($query_string) {
                expires max;
            }
        }
 
        location / {

            proxy_pass http://tornado;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";


            #proxy_pass_header Server;
            #proxy_set_header Host $http_host;
            #proxy_redirect off;
            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Scheme $scheme;
            #proxy_set_header Upgrade $http_upgrade;
    		#proxy_set_header Connection "upgrade";
            
        }


    }
}

